/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Model.Doctor;
import Model.DoctorDirectory;
import Model.Encounter;
import Model.EncounterHistory;
import Model.Person;
import Model.PersonDirectory;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Abhishek
 */
public class EncounterForAdmin extends javax.swing.JPanel {

    /**
     * Creates new form EncounterForAdmin
     */
    PersonDirectory personDir; 
    DoctorDirectory doctorDir;
    EncounterHistory encounterDir;
    public EncounterForAdmin(PersonDirectory personDir, DoctorDirectory doctorDir,EncounterHistory encounterDir) {
        initComponents();
        this.personDir = personDir;
        this.doctorDir = doctorDir;
        this.encounterDir = encounterDir;
        addingPanel.setVisible(false);
        populateTables();
        populateEncounterTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addEncBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        encHisTable = new javax.swing.JTable();
        addingPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        patTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jScrollPane3 = new javax.swing.JScrollPane();
        docTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();

        addEncBtn.setBackground(new java.awt.Color(204, 255, 204));
        addEncBtn.setText("Add an encounter");
        addEncBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEncBtnActionPerformed(evt);
            }
        });

        encHisTable.setBackground(new java.awt.Color(204, 255, 204));
        encHisTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Patient Name", "Patient Id", "Doctor Name", "Doctor Id", "Encounter date", "Description"
            }
        ));
        jScrollPane2.setViewportView(encHisTable);

        addingPanel.setBackground(new java.awt.Color(255, 255, 204));

        patTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Patient Name", "Patient Id", "Age"
            }
        ));
        jScrollPane1.setViewportView(patTable);

        jLabel1.setText("Select a patient");

        jLabel2.setText("Encounter date :");

        docTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Doctor Name", "Doctor Id"
            }
        ));
        jScrollPane3.setViewportView(docTable);

        jLabel3.setText("Select a doctor");

        jButton1.setBackground(new java.awt.Color(204, 255, 204));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Description");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane4.setViewportView(jTextArea1);

        javax.swing.GroupLayout addingPanelLayout = new javax.swing.GroupLayout(addingPanel);
        addingPanel.setLayout(addingPanelLayout);
        addingPanelLayout.setHorizontalGroup(
            addingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addingPanelLayout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addComponent(jLabel1)
                .addGap(214, 214, 214)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(addingPanelLayout.createSequentialGroup()
                .addGroup(addingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addingPanelLayout.createSequentialGroup()
                        .addGroup(addingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(addingPanelLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addingPanelLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(270, 270, 270)
                        .addComponent(jButton1))
                    .addGroup(addingPanelLayout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 189, Short.MAX_VALUE))
        );
        addingPanelLayout.setVerticalGroup(
            addingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addingPanelLayout.createSequentialGroup()
                .addGroup(addingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(addingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(addingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addingPanelLayout.createSequentialGroup()
                        .addGroup(addingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addingPanelLayout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(jButton1))
                            .addGroup(addingPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 41, Short.MAX_VALUE))
                    .addGroup(addingPanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Encounter History");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 744, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(73, 73, 73)
                                .addComponent(addEncBtn))
                            .addComponent(jLabel5))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addEncBtn)
                .addGap(18, 18, 18)
                .addComponent(addingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addEncBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEncBtnActionPerformed
        // TODO add your handling code here:
        addingPanel.setVisible(true);
        
    }//GEN-LAST:event_addEncBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int selectedPatient = patTable.getSelectedRow();
        int selectedDoctor = docTable.getSelectedRow();
        if ((selectedPatient < 0 || selectedPatient>1)&& (selectedDoctor < 0 || selectedDoctor>1)) {
            JOptionPane.showMessageDialog(null, "Please select 1 patient and doctor each to add encounter!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        DefaultTableModel model = (DefaultTableModel) patTable.getModel();
        Person selectedPerson = (Person) model.getValueAt(selectedPatient, 0);
        
        DefaultTableModel md = (DefaultTableModel) docTable.getModel();
        Person selectedP = (Person) md.getValueAt(selectedDoctor, 0);
        
        Date date = jDateChooser1.getDate();
        String name = selectedPerson.getName();
        int patientId = selectedPerson.getPersonId();
        int age = selectedPerson.getAge();
        String docName = selectedP.getName();
        int doctorId = selectedP.getPersonId();
        String illness = jTextArea1.getText();
        
        Encounter e = encounterDir.addEncounter();
        e.setDate(date);
        e.setPatientName(name);
        e.setDoctorName(docName);
        e.setIllness(illness);
        e.setDoctorId(doctorId);
        e.setPatientId(patientId);
        JOptionPane.showMessageDialog(null, "New encounter added");
        populateEncounterTable();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addEncBtn;
    private javax.swing.JPanel addingPanel;
    private javax.swing.JTable docTable;
    private javax.swing.JTable encHisTable;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTable patTable;
    // End of variables declaration//GEN-END:variables

    private void populateTables() {
        DefaultTableModel model = (DefaultTableModel) patTable.getModel();
        model.setRowCount(0);
        for(Person p : personDir.getPersonDir()) {
            if(p.isIsPatient()){
            Object[] row = new Object[3];
            row[0]= p;
            row[1]= p.getPersonId();
            row[2]= p.getAge();
            model.addRow(row);
            }
           
        }
        DefaultTableModel mdl = (DefaultTableModel) docTable.getModel();
        mdl.setRowCount(0);
        for(Doctor d : doctorDir.getDoctorDir()) {
            Object[] row = new Object[2];
            row[0]= d;
            row[1]= d.getDoctorId();
            
            mdl.addRow(row);
        }
    }

    private void populateEncounterTable() {
        DefaultTableModel model = (DefaultTableModel) encHisTable.getModel();
        model.setRowCount(0);
        
        for(Encounter e : encounterDir.getEncounters()) {
            Object[] row = new Object[6];
            row[0]= e;
            row[1]= e.getPatientId();
            row[2]= e.getDoctorName();
            row[3]= e.getDoctorId();
            row[4]= e.getDate();
            row[5]= e.getIllness();
            
            model.addRow(row);
        }
    }
}
